@page "/gifts"
@inject UserService _userService
@inject GiftService _giftService
@using Infrastructure


<PageTitle>Gift management</PageTitle>
<h2>Login</h2>
@if(_userService.LoggedIn)
{
    <button type="button" @onclick="Logout">Logout</button>
}
@if(!_userService.LoggedIn)
{
    <EditForm Model="@loginUser" OnValidSubmit="@HandleValidLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <table>
            <tbody>
                <tr>
                    <td style="text-align:right">Email: </td>
                    <td><InputText id="email" placeholder="name@email.com" @bind-Value="loginUser.Email" /></td>
                </tr>
                <tr>
                    <td style="text-align:right">Password: </td>
                    <td><InputText type="password" placeholder="Password" @bind-Value="@loginUser.Password" /></td>
                </tr>
            </tbody>
        </table>

        <button type="submit">Login</button>
    </EditForm>
}
<br/>

<h2>Add gift</h2>
<EditForm Model="@gift" OnValidSubmit="@HandleValidGiftSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <table>
        <tbody>   
            <tr>
                <td style="text-align:right">Image: </td>
                <InputFile OnChange="@LoadFile"/>
                <img src="data:image/png;base64, @loadedImageBase64" />
            </tr>
            <tr>
                <td style="text-align:right">Name: </td>
                <td><InputText id="lastName" placeholder="Name of the gift" @bind-Value="gift.GiftName" /></td>
            </tr>
            <tr>
                <td style="text-align:right">Duration: </td>
                <td><InputCheckbox  @bind-Value="gift.HasDuration"/></td>
            </tr>
            <tr>
                <td style="text-align:right">Duration: </td>
                <td><InputText @bind-Value="gift.Duration"/></td>
            </tr>
        </tbody>
    </table>

    <button type="submit">Submit</button>
</EditForm>
<br/>


<h2>Registered gifts</h2>
<table>
    <thead>
        <tr>
            <th> Image </th>
            <th> Name </th>
            <th> Duration </th>
            <th> Delete </th>
        </tr>
    </thead>
    <tbody>
        @foreach(var gift in _giftService.GetGifts())
        {
            <tr>
                <td> <img src="data:image/png;base64, @gift.Image" height="64"/></td>
                <td>@gift.Name</td>
                <td>@gift.Duration</td>
                <td><button @onclick="() => DeleteGift(gift)">X</button></td>
            </tr>
        }
    </tbody>
</table>
<br/>

<!--
<h2>Give gift</h2>
<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <table>
        <tbody>
            <tr>
                <td style="text-align:right">First name: </td>
                <td><InputText id="firstName" placeholder="First name" @bind-Value="user.FirstName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Last name: </td>
                <td><InputText id="lastName" placeholder="Last name" @bind-Value="user.LastName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Email: </td>
                <td><InputText id="email" placeholder="name@email.com" @bind-Value="user.Email" /></td>
            </tr>
            <tr>
                <td style="text-align:right">Password: </td>
                <td><InputText type="password" placeholder="Password" @bind-Value="@user.Password" /></td>
            </tr>
        </tbody>
    </table>

    <button type="submit">Submit</button>
</EditForm>
<br/>

<h2>Requested gifts</h2>
<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <table>
        <tbody>
            <tr>
                <td style="text-align:right">First name: </td>
                <td><InputText id="firstName" placeholder="First name" @bind-Value="user.FirstName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Last name: </td>
                <td><InputText id="lastName" placeholder="Last name" @bind-Value="user.LastName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Email: </td>
                <td><InputText id="email" placeholder="name@email.com" @bind-Value="user.Email" /></td>
            </tr>
            <tr>
                <td style="text-align:right">Password: </td>
                <td><InputText type="password" placeholder="Password" @bind-Value="@user.Password" /></td>
            </tr>
        </tbody>
    </table>

    <button type="submit">Submit</button>
</EditForm>
<br/>

<h2>Pending gifts</h2>
<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <table>
        <tbody>
            <tr>
                <td style="text-align:right">First name: </td>
                <td><InputText id="firstName" placeholder="First name" @bind-Value="user.FirstName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Last name: </td>
                <td><InputText id="lastName" placeholder="Last name" @bind-Value="user.LastName" /></td>
            </tr>     
            <tr>
                <td style="text-align:right">Email: </td>
                <td><InputText id="email" placeholder="name@email.com" @bind-Value="user.Email" /></td>
            </tr>
            <tr>
                <td style="text-align:right">Password: </td>
                <td><InputText type="password" placeholder="Password" @bind-Value="@user.Password" /></td>
            </tr>
        </tbody>
    </table>

    <button type="submit">Submit</button>
</EditForm>
<br/>
-->

@code {
    private LoginUserModel loginUser = new();
    private GiftModel gift = new();
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 16777216; //1024 * 15;
    private int maxAllowedFiles = 3;
    private bool isLoading;
    private string loadedImageBase64;
    private string loadedThumbnailBase64;

    private void HandleValidLogin()
    {
        try { _userService.Login(loginUser.Email, loginUser.Password); }
        catch (Exception ex) { Console.WriteLine(ex.ToString()); }
    }

    private void Logout() => _userService.Logout();

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {

                var tempFileName = "temp.png";
                await using FileStream fs = new(tempFileName, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
                fs.Close();
                await fs.DisposeAsync();
                loadedImageBase64 = ImageConverter.ImageToBase64(tempFileName);
                loadedThumbnailBase64 = ImageConverter.ImageToBase64(tempFileName, 300, 300);
                System.IO.File.Delete(tempFileName);

                //loadedFiles.Add(file);

                //var trustedFileNameForFileStorage = Path.GetRandomFileName();
                //var path = Path.Combine(Environment.ContentRootPath,
                //        Environment.EnvironmentName, "unsafe_uploads",
                //        trustedFileNameForFileStorage);


                //await using FileStream fs = new(path, FileMode.Create);
                //await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
            }
            catch (Exception ex)
            {
                //Logger.LogError("File: {Filename} Error: {Error}", 
                //    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }

    private void HandleValidImageSubmit()
    {
        ;
    }

    private void HandleValidGiftSubmit()
    {
        _giftService.AddGift(gift.GiftName, loadedImageBase64);
    }

    private void DeleteGift(Gift gift)
    {
        _giftService.DeleteGift(gift);
    }
}
