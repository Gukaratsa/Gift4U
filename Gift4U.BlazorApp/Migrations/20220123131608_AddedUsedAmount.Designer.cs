// <auto-generated />
using System;
using Gift4U.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gift4U.BlazorApp.Migrations
{
    [DbContext(typeof(GiftDBContext))]
    [Migration("20220123131608_AddedUsedAmount")]
    partial class AddedUsedAmount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Gift4U.Domain.Models.Gift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.GivenGift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GiftId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GiverId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Used")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("GiftId");

                    b.HasIndex("GiverId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("GivenGifts");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GivenInRequestId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RequestStateId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Requested")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Responded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GivenInRequestId");

                    b.HasIndex("RequestStateId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.RequestState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RequestStates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d470980-0645-4768-84a6-2aaaf90c79a7"),
                            Name = "Pending"
                        },
                        new
                        {
                            Id = new Guid("906a755e-e9d4-4dbf-9056-9d46a64f9644"),
                            Name = "RequestApproved"
                        },
                        new
                        {
                            Id = new Guid("1f5dde43-f581-4d6e-a914-b46bf307496b"),
                            Name = "RequestDenied"
                        },
                        new
                        {
                            Id = new Guid("cc02d40c-2dad-4711-8cbd-1ddffd2489c4"),
                            Name = "RequestStarted"
                        },
                        new
                        {
                            Id = new Guid("f70259fa-99c7-40b3-9764-ea005bbc7c3e"),
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("Gift4U.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.GivenGift", b =>
                {
                    b.HasOne("Gift4U.Domain.Models.Gift", "Gift")
                        .WithMany("GivenGifts")
                        .HasForeignKey("GiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gift4U.Domain.Models.User", "Giver")
                        .WithMany("GivenGifts")
                        .HasForeignKey("GiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gift4U.Domain.Models.User", "Receiver")
                        .WithMany("ReceivedGifts")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gift");

                    b.Navigation("Giver");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.Request", b =>
                {
                    b.HasOne("Gift4U.Domain.Models.GivenGift", "GivenInRequest")
                        .WithMany("Requests")
                        .HasForeignKey("GivenInRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gift4U.Domain.Models.RequestState", "RequestState")
                        .WithMany("Requests")
                        .HasForeignKey("RequestStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GivenInRequest");

                    b.Navigation("RequestState");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.Gift", b =>
                {
                    b.Navigation("GivenGifts");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.GivenGift", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.RequestState", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Gift4U.Domain.Models.User", b =>
                {
                    b.Navigation("GivenGifts");

                    b.Navigation("ReceivedGifts");
                });
#pragma warning restore 612, 618
        }
    }
}
